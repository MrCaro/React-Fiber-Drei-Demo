{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["softShadows","CustomBoxMesh","position","args","color","speed","mesh","useRef","useFrame","current","rotation","x","y","castShadow","ref","attach","MeshWobbleMaterial","factor","App","shadowMap","colorManagement","camera","fov","intensity","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","receiveShadow","Math","PI","opacity","Stars","radius","depth","count","saturation","OrbitControls","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAQAA,cAEA,IAAMC,EAAgB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACtCC,EAAOC,iBAAO,MAGpB,OAFAC,aAAS,kBAAOF,EAAKG,QAAQC,SAASC,EAAIL,EAAKG,QAAQC,SAASE,GAAK,OAGjE,uBAAMC,YAAU,EAACC,IAAKR,EAAMJ,SAAUA,EAAtC,UACI,mCAAmBa,OAAO,WAAWZ,KAAMA,IAC3C,cAACa,EAAA,EAAD,CACID,OAAO,WACPX,MAAOA,EACPC,MAAOA,EACPY,OAAQ,SAmDTC,MA7Cf,WACI,OACA,mCACI,eAAC,IAAD,CACIC,WAAS,EACTC,iBAAe,EACfC,OAAQ,CAACnB,SAAU,EAAE,EAAG,EAAG,IAAKoB,IAAK,IAHzC,UAKI,8BAAcC,UAAW,KACzB,kCACIV,YAAU,EACVX,SAAU,CAAC,EAAG,GAAI,GAClBqB,UAAW,IACXC,uBAAsB,KACtBC,wBAAuB,KACvBC,oBAAmB,GACnBC,sBAAqB,GACrBC,sBAAqB,GACrBC,oBAAmB,GACnBC,wBAAuB,KAE3B,4BAAY5B,SAAU,EAAE,GAAI,GAAI,IAAKqB,UAAW,KAChD,4BAAYrB,SAAU,CAAC,GAAI,GAAI,GAAIqB,UAAW,MAC9C,gCACI,uBAAMQ,eAAa,EAACrB,SAAU,EAAEsB,KAAKC,GAAK,EAAG,EAAG,GAAI/B,SAAU,CAAC,GAAI,EAAG,GAAtE,UACI,qCAAqBa,OAAO,WAAWZ,KAAM,CAAC,GAAI,MAClD,gCAAgBY,OAAO,WAAWmB,QAAS,UAGnD,cAAC,EAAD,CAAehC,SAAU,EAAE,EAAG,GAAI,GAAIE,MAAM,SAASC,MAAO,IAC5D,cAAC,EAAD,CAAeH,SAAU,CAAC,EAAG,EAAG,GAAIC,KAAM,CAAC,EAAG,EAAG,GAAIC,MAAM,YAAYC,MAAO,IAC9E,cAAC,EAAD,CAAeH,SAAU,CAAC,EAAG,GAAI,GAAIE,MAAM,OAAOC,MAAO,IACzD,cAAC8B,EAAA,EAAD,CACIC,OAAQ,IACRC,MAAO,GACPC,MAAO,IACPrB,OAAQ,EACRsB,WAAY,IAEhB,cAACC,EAAA,EAAD,UCtDGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8eda0b82.chunk.js","sourcesContent":["\nimport { useRef } from 'react';\nimport './App.scss';\n\nimport { Canvas, useFrame } from 'react-three-fiber';\n\nimport { softShadows, MeshWobbleMaterial, OrbitControls, Stars} from '@react-three/drei';\n\nsoftShadows();\n\nconst CustomBoxMesh = ({ position, args, color, speed }) => {\n    const mesh = useRef(null);\n    useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01));\n\n    return (\n        <mesh castShadow ref={mesh} position={position}>\n            <boxBufferGeometry attach='geometry' args={args} />\n            <MeshWobbleMaterial\n                attach='material'\n                color={color}\n                speed={speed}\n                factor={0.3}\n            />\n        </mesh>\n    )\n}\n\nfunction App() {\n    return (\n    <>\n        <Canvas\n            shadowMap\n            colorManagement\n            camera={{position: [-5, 2, 10], fov: 70}}\n        >\n            <ambientLight intensity={.5} />\n            <directionalLight\n                castShadow\n                position={[0, 10, 0]}\n                intensity={1.5}\n                shadow-mapSize-width={1024}\n                shadow-mapSize-height={1024}\n                shadow-camera-far={50}\n                shadow-camera-left={-10}\n                shadow-camera-right={10}\n                shadow-camera-top={10}\n                shadow-camera-bottom={-10}\n            />\n            <pointLight position={[-10, 0, -20]} intensity={.5}/>\n            <pointLight position={[0, -10, 0]} intensity={1.5}/>\n            <group>\n                <mesh receiveShadow rotation={[-Math.PI / 2, 0, 0]} position={[0, -3, 0]}>\n                    <planeBufferGeometry attach='geometry' args={[50, 50]}/>\n                    <shadowMaterial attach='material' opacity={.3} />\n                </mesh>\n            </group>\n            <CustomBoxMesh position={[-2, 1, -5]} color='yellow' speed={6}/>\n            <CustomBoxMesh position={[0, 1, 0]} args={[3, 2, 1]} color='lightblue' speed={1}/>\n            <CustomBoxMesh position={[5, 1, -2]} color='pink' speed={6}/>\n            <Stars\n                radius={100} // Radius of the inner sphere (default=100)\n                depth={50} // Depth of area where stars should fit (default=50)\n                count={5000} // Amount of stars (default=5000)\n                factor={4} // Size factor (default=4)\n                saturation={0} // Saturation 0-1 (default=0)\n            />\n            <OrbitControls/>\n        </Canvas>\n    </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}